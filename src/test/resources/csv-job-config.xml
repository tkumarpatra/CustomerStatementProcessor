<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<batch:job id="CSVreportJob">
		<batch:step id="CSVreportJobStep">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader"
					writer="cvsFileItemWriter" processor="filterProcessor"
					commit-interval="1">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- Business process -->
	<bean id="filterProcessor"
		class="com.bank.customer.statement.processor.CustomerStatementProcessor.processor.BusinessProcessor" />

	<bean id="xmlItemReader"
		class="org.springframework.batch.item.xml.StaxEventItemReader"
		scope="step">
		<property name="fragmentRootElementName" value="record" />
		<property name="resource"
			value="#{jobParameters[inputFileLocation]}" />
		<property name="unmarshaller" ref="reportUnmarshaller" />
	</bean>

	<!-- Read and map values to object, via jaxb2 -->
	<bean id="reportUnmarshaller"
		class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.bank.customer.statement.processor.CustomerStatementProcessor.model.ReportModel
				</value>
			</list>
		</property>
	</bean>

	<!-- Read a csv file -->
	<bean id="cvsFileItemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader"
		scope="step">
		<property name="resource"
			value="#{jobParameters[inputFileLocation]}" />
		<property name="lineMapper">
			<bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="reference,accountNumber,description,startBalance,mutation,endBalance" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="report" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="cvsFileItemWriter"
		class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">
		<!-- write to this csv file -->
		<property name="resource"
			value="#{jobParameters[outputFileLocation]}" />
		<property name="shouldDeleteIfExists" value="true" />

		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="reference,description" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="report"
		class="com.bank.customer.statement.processor.CustomerStatementProcessor.model.ReportModel" />

	<bean class="org.springframework.batch.test.JobLauncherTestUtils" />

</beans>